{{- define "hosts.keycloak" -}}
{{ printf "%s.%s" .Values.subdomains.keycloak .Values.domain }}
{{- end -}}
{{- define "urls.keycloak" -}}
{{ printf "https://%s" (include "hosts.keycloak" .) }}
{{- end -}}

{{- define "urls.idp" -}}
{{ printf "https://%s/realms/master" (include "hosts.keycloak" .) }}
{{- end -}}
{{- define "urls.idp_saml_entrypoint" -}}
{{ printf "%s/protocol/saml" (include "urls.idp" .) }}
{{- end -}}
{{- define "urls.idp_oidc_callback" -}}
{{ printf "%s/broker/admin-oidc/endpoint" (include "urls.idp" .) }}
{{- end -}}

{{- define "hosts.admin_oidc" -}}
{{ printf "%s.%s" .Values.subdomains.dex .Values.domain }}
{{- end -}}
{{- define "urls.admin_oidc_issuer" -}}
{{ printf "https://%s" (include "hosts.admin_oidc" .) }}
{{- end -}}
{{- define "urls.admin_oidc_callback_external" -}}
{{ printf "https://%s/callback" (include "hosts.admin_oidc" .) }}
{{- end -}}
{{- define "urls.admin_oidc_token" -}}
{{ printf "https://%s/token" (include "hosts.admin_oidc" .) }}
{{- end -}}
{{- define "urls.admin_oidc_auth" -}}
{{ printf "https://%s/auth" (include "hosts.admin_oidc" .) }}
{{- end -}}
{{- define "urls.admin_oidc_jwks" -}}
{{ printf "https://%s/keys" (include "hosts.admin_oidc" .) }}
{{- end -}}

{{- define "hosts.authproxy" -}}
{{ printf "%s.%s" .Values.subdomains.oauth2_proxy .Values.domain }}
{{- end -}}
{{- define "urls.authproxy_login" -}}
{{ printf "https://%s/oauth2/start" (include "hosts.authproxy" .) }}
{{- end -}}
{{- define "urls.authproxy_check" -}}
{{ printf "http://oauth2-proxy.%s.svc.cluster.local/oauth2/auth" .Release.Namespace }}
{{- end -}}
{{- define "urls.authproxy_callback" -}}
{{ printf "https://%s/oauth2/callback" (include "hosts.authproxy" .) }}
{{- end -}}

{{- define "hosts.phpldapadmin" -}}
{{ printf "%s.%s" .Values.subdomains.phpldapadmin .Values.domain }}
{{- end -}}

{{- define "dn.base" -}}
{{ printf "dc=%s" (.Values.domain | splitList "." | join ",dc=") }}
{{- end -}}
{{- define "dn.users" -}}
{{ printf "ou=users,dc=%s" (.Values.domain | splitList "." | join ",dc=") }}
{{- end -}}
{{- define "dn.groups" -}}
{{ printf "ou=groups,dc=%s" (.Values.domain | splitList "." | join ",dc=") }}
{{- end -}}
{{- define "dn.roles" -}}
{{ printf "ou=roles,dc=%s" (.Values.domain | splitList "." | join ",dc=") }}
{{- end -}}
{{- define "dn.admin" -}}
{{ printf "cn=admin,dc=%s" (.Values.domain | splitList "." | join ",dc=") | quote }}
{{- end -}}

{{- define "class.users" -}}
inetOrgPerson
{{- end -}}
{{- define "class.groups" -}}
groupOfNames
{{- end -}}
{{- define "class.roles" -}}
groupOfNames
{{- end -}}

{{- if not (include "common.secrets.exists" (dict "secret" "sso-config" "context" $)) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.configSecretName }}
type: Opaque
data:
  idp_url: {{ include "urls.idp" . | b64enc }}
  idp_cert_secret: idp-cert

  admin_group: {{ .Values.admin.group | b64enc }}

  oidc_issuer_url: {{ include "urls.idp" .  | b64enc }}
  saml_entrypoint_url: {{ include "urls.idp_saml_entrypoint" . | b64enc }}

  ldap_host: {{ printf "openldap.%s.svc.cluster.local" .Release.Namespace | b64enc }}
  ldap_port: {{ "389" | b64enc }}
  ldap_base_dn: {{ include "dn.base" . | b64enc }}
  ldap_admin_dn: {{ include "dn.admin" . | b64enc }}
  ldap_admin_pw: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.configSecretName "key" "ldap_admin_pw" "providedValues" (list "admin.password") "context" $) | b64enc }}
  ldap_users_dn: {{ include "dn.users" . | b64enc }}
  ldap_groups_dn: {{ include "dn.groups" . | b64enc }}
  ldap_roles_dn: {{ include "dn.roles" . | b64enc }}
  ldap_users_class: {{ include "class.users" . | b64enc }}
  ldap_groups_class: {{ include "class.groups" . | b64enc }}
  ldap_roles_class: {{ include "class.roles" . | b64enc }}

  authproxy_login_url: {{ include "urls.authproxy_login" . | b64enc }}
  authproxy_check_url: {{ include "urls.authproxy_check" . | b64enc }}
  authproxy_callback_url: {{ include "urls.authproxy_callback" . | b64enc }}

  keycloak_url: {{ include "urls.keycloak" . | b64enc }}
  keycloak_admin_user: admin
  keycloak_admin_pw: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.configSecretName "key" "keycloak_admin_pw" "providedValues" (list "") "context" $) | b64enc }}

  internal_oidc_client_secret: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.configSecretName "key" "internal_oidc_client_secret" "providedValues" (list "") "context" $) | b64enc }}
{{- end -}}
